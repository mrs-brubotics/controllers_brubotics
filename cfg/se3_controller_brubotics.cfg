#!/usr/bin/env python
PACKAGE = "controllers_brubotics"

import roslib;
roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("kpxy", double_t, 1, "Position constant for xy-axes", 0.0, 0.0, 40.0)
gen.add("kvxy", double_t, 2, "Velocity constant for xy-axes", 0.0, 0.0, 40.0)
gen.add("kaxy", double_t, 4, "Acceleration constant for xy-axes", 0.0, 0.0, 2.0)
gen.add("kiwxy", double_t, 8, "Integral constant for xy-axes", 0.0, 0.0, 10.0)
gen.add("kibxy", double_t, 16, "Integral constant for xy-axes", 0.0, 0.0, 10.0)
gen.add("kpz", double_t, 32, "Position constant for z-axis", 0.0, 0.0, 200.0)
gen.add("kvz", double_t, 64, "Velocity constant for z-axis", 0.0, 0.0, 200.0)
gen.add("kaz", double_t, 128, "Acceleration constant for z-axis", 0.0, 0.0, 2.0)
gen.add("kqxy", double_t, 256, "Attitude constant for xy-axis", 0.0, 0.0, 20.0)
gen.add("kqz", double_t, 512, "Attitude constant for z-axis", 0.0, 0.0, 40.0)
gen.add("kiwxy_lim", double_t, 1024, "xy-axes integral limit", 0.0, 0.0, 10.0)
gen.add("kibxy_lim", double_t, 2048, "xy-axes integral limit", 0.0, 0.0, 10.0)
gen.add("km", double_t, 4096, "Integral constant for mass", 0.0, 0.0, 2.0)
gen.add("km_lim", double_t, 8192, "mass integral limit", 0.0, 0.0, 10.0)
gen.add("output_mode", int_t, 16384, "1 = rate, 2 = attitude", 0, 1, 2)

exit(gen.generate(PACKAGE, "Se3ControllerBrubotics", "se3_controller_brubotics"))
